{"name":"Word Count as a Traditional Programming Benchmark Problem for Genetic Programming","tagline":"Thomas Helmuth, Lee Spector","body":"## Information\r\n\r\n#### Citation\r\nT. Helmuth and L. Spector. Word Count as a Traditional Programming Benchmark Problem for Genetic Programming. In _GECCO '14: Proceedings of the 16th annual conference on Genetic and evolutionary computation_. July 2014. ACM.\r\n\r\n#### Abstract\r\nThe Unix utility program wc, which stands for \"word count,\" takes any number of files and prints the number of newlines, words, and characters in each of the files. We show that genetic programming can find programs that replicate the core functionality of the wc utility, and propose this problem as a \"traditional programming\" benchmark for genetic programming systems. This \"wc problem\" features key elements of programming tasks that often confront human programmers, including requirements for multiple data types, a large instruction set, control flow, and multiple outputs. Furthermore, it mimics the behavior of a real-world utility program, showing that genetic programming can automatically synthesize programs with general utility. We suggest statistical procedures that should be used to compare performances of different systems on traditional programming problems such as the wc problem, and present the results of a short experiment using the problem. Finally, we give a short analysis of evolved solution programs, showing how they make use of traditional programming concepts.\r\n\r\n#### Full paper\r\n[PDF of full paper](https://github.com/thelmuth/GECCO_2014_WC_Materials/raw/master/wc.pdf)\r\n\r\n## Supplementary materials\r\n\r\n#### Source code\r\nAn archive of the source code for Clojush, the Clojure version of Push used to run our experiments, can be found [here](https://github.com/thelmuth/Clojush/releases/tag/wcPaper). The most recent version of Clojush can be found in its [GitHub Repository](https://github.com/lspector/Clojush).\r\n\r\n#### Evolved solutions to wc problem\r\nThe 11 solution programs we evolved in our experiments can be found [here](https://github.com/thelmuth/GECCO_2014_WC_Materials/blob/master/simplified_successes.push). Note that these programs have been automatically simplified to remove instructions that have no effect on the outputs of their programs.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}